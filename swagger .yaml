swagger: "2.0"
info:
  description: "Retrieve the data by giving id,name
Even we can Update and Delete the Existingdata in DataBase"

  version: "1.0.0"
  title: "Crud Operation Swagger"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: product-controller
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
- "https"
- "http"
paths:
  '/productcategory/Product/{name}':
    get:
      tags:
        - product-controller
      summary: findProductByname
      operationId: findProductBynameUsingGET
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
       
        '404':
          description: The server can not find the requested details.
      deprecated: false
          
  /productcategory/product:
    post:
      tags:
        - product-controller
      summary: addProduct
      operationId: addProductUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productRequest
          description: productRequest
          required: true
          schema:
            $ref: '#/definitions/ProductRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
      
      
        '404':
          description: The server can not find the requested details.
      deprecated: false
    put:
      tags:
        - product-controller
      summary: updatProduct
      operationId: updatProductUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: product
          description: product
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
      
        '404':
          description: The server can not find the requested details.
      deprecated: false
  '/productcategory/product/{id}':
    get:
      tags:
        - product-controller
      summary: findProductById
      operationId: findProductByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
       
        '404':
          description: The server can not find the requested details.
      deprecated: false
    delete:
      tags:
        - product-controller
      summary: deleteProduct
      operationId: deleteProductUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
      deprecated: false
      
  /productcategory/products:
    get:
      tags:
        - product-controller
      summary: findAllProducts
      operationId: findAllProductsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      deprecated: false
definitions:
 
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
        format: double
      quantity:
        type: integer
        format: int32
      review:
        type: integer
        format: int32
    title: Product
  ProductRequest:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
        format: double
        minimum: 1000
      quantity:
        type: integer
        format: int32
        maximum: 5
      review:
        type: integer
        format: int32
        minimum: 0
        maximum: 5
    title: ProductRequest
 

